<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>凌寒style</title>
  
  <subtitle>安逸生活</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://heartsay2018.github.io/"/>
  <updated>2018-01-22T07:07:08.701Z</updated>
  <id>http://heartsay2018.github.io/</id>
  
  <author>
    <name>wade wang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>神奇的steam</title>
    <link href="http://heartsay2018.github.io/2018/01/22/%E7%A5%9E%E5%A5%87%E7%9A%84steam/"/>
    <id>http://heartsay2018.github.io/2018/01/22/神奇的steam/</id>
    <published>2018-01-22T07:03:45.000Z</published>
    <updated>2018-01-22T07:07:08.701Z</updated>
    
    <content type="html"><![CDATA[<p>steam （教育学科、创客教育）<br>STEAM代表科学（Science），技术（Technology），工程（Engineering），艺术（Art），数学（Mathematics）。STEAM教育就是集科学，技术，工程，艺术，数学多学科融合的综合教育。<br>STEAM由来编辑<br>不难理解，STEAM是这五个单词的缩写：Science(科学), Technology(技术), Engineering(工程), Arts(艺术), Maths(数学)。有人称这个STEAM教育打破学科界限很好玩，比如技术和工程结合，艺术和数学结合，科学和工程结合……[1]<br>教育理念编辑<br>STEAM是一种教育理念，有别于传统的单学科、重书本知识的教育方式。STEAM是一种重实践的超学科教育概念。任何事情的成功都不仅仅依靠某一种能力的实现，而是需要借于多种能力之间，比如高科技电子产品的建造过程中，不但需要科学技术，运用高科技手段创新产品功能，还需要好看的外观，也就是艺术等方面的综合才能，所以单一技能的运用已经无法支撑未来人才的发展，未来，我们需要的是多方面的综合型人才。 从而探索出STEAM教育理念。[2]<br>STEAM教育理念最早是美国政府提出的教育倡议，为加强美国K12关于科学、技术、工程、艺术以及数学的教育。STEAM的原身是STEM理念，即科学（Science）、技术（Technology）、工程（Engineering）、数学（Mathematics）的首字母。鼓励孩子在科学、技术、工程和数学领域的发展和提高，培养孩子的综合素养，从而提升其全球竞争力。近期加入了Arts，也就是艺术，变得更加全面。[2]<br>STEAM教育在美国的重要性不亚于中国的素质教育，在美国大部分中小学都设有STEAM教育的经费开支，而STEAM也被老师、校长、教育家们时时挂在嘴边。在STEAM教育的号召下，机器人、3D打印机进入了学校；奥巴马也加入了全民学编程的队伍，写下了自己的第一条代码；帮助孩子们学习数学、科学的教育科技产品层出不穷；而且这五个学科，技术和工程结合，艺术和数学结合，打破常规了学科界限。[2] </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;steam （教育学科、创客教育）&lt;br&gt;STEAM代表科学（Science），技术（Technology），工程（Engineering），艺术（Art），数学（Mathematics）。STEAM教育就是集科学，技术，工程，艺术，数学多学科融合的综合教育。&lt;br&gt;STE
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>前端学习路线</title>
    <link href="http://heartsay2018.github.io/2018/01/22/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
    <id>http://heartsay2018.github.io/2018/01/22/前端学习路线/</id>
    <published>2018-01-22T06:50:24.000Z</published>
    <updated>2018-01-22T06:54:15.557Z</updated>
    
    <content type="html"><![CDATA[<p>前端开发入门学习有：HTML、CSS、JavaScript（简称JS）这三个部分。所以在学习之前我们需要先明确三个概念：</p><p>HTML——内容层，它的作用是表示一个HTML标签在页面里是个什么角色。<br>CSS——样式层，它的作用是表示一块内容以什么样的样式（字体、大小、颜色、宽高等）显示。<br>JS——行为层，它的作用是当用户触发某些行为时，会给内容和样式带来什么样的改变。</p><p>一、HTML，CSS部分<br>HTML/CSS初学，就照着<a href="http://www.w3cschool.cn/的实验做，把http://www.w3cschool.cn/index-6.html和http://www.w3cschool.cn/index-7.html两套做完了就入门了，" target="_blank" rel="noopener">http://www.w3cschool.cn/的实验做，把http://www.w3cschool.cn/index-6.html和http://www.w3cschool.cn/index-7.html两套做完了就入门了，</a></p><p>入门之后，学习CSS的精华，即布局，推荐李炎恢的教学视频，布局这一章：<a href="http://edu.51cto.com/lesson/id-14895.html第27章，如果觉得不够，需要实战，则再学习接下来的28，29章。注意，这时候一定要老师讲一块代码，自己就要照着实现一次，切勿只看不做。" target="_blank" rel="noopener">http://edu.51cto.com/lesson/id-14895.html第27章，如果觉得不够，需要实战，则再学习接下来的28，29章。注意，这时候一定要老师讲一块代码，自己就要照着实现一次，切勿只看不做。</a></p><p>CSS还有一个精华部分就是命名规范，找几个著名网站（比如豆瓣、网易新闻）这类，研究它们的命名规范，我这里，有一个现成的命名规范可供学习（需要登录evernote查看）：<a href="https://www.evernote.com/shard/s168/sh/7f89cc57-cab2-4712-b61b-9fde25e3ef51/d01c8e34ef05373ec06c3b2f7cfaba82/res/e0b9963b-ba7a-441a-8462-8f87c48e4cda.jpg?resizeSmall&amp;width=832" target="_blank" rel="noopener">https://www.evernote.com/shard/s168/sh/7f89cc57-cab2-4712-b61b-9fde25e3ef51/d01c8e34ef05373ec06c3b2f7cfaba82/res/e0b9963b-ba7a-441a-8462-8f87c48e4cda.jpg?resizeSmall&amp;width=832</a></p><p>学习完成后就是一个较为熟练的HTML/CSS使用者了.这时候如果想继续深入学习相关类库和框架，推荐Sass和Compass，推荐两篇阮一峰的博客：<a href="http://www.ruanyifeng.com/blog/2012/06/sass.htmlhttp://www.ruanyifeng.com/blog/2012/11/compass.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2012/06/sass.htmlhttp://www.ruanyifeng.com/blog/2012/11/compass.html</a></p><p>二、JavaScript部分<br>初学者推荐看视频：<a href="http://edu.51cto.com/course/course_id-166-page-1.html，特别注意JavaScript的OOP写法（重点，可多看几遍），以及闭包、原型链，异步编程部分（次重点），前者写项目都在用，后者涉及JS这个语言本质特点。" target="_blank" rel="noopener">http://edu.51cto.com/course/course_id-166-page-1.html，特别注意JavaScript的OOP写法（重点，可多看几遍），以及闭包、原型链，异步编程部分（次重点），前者写项目都在用，后者涉及JS这个语言本质特点。</a></p><p>然后需要学习JS和HTML/CSS在浏览器下的调试方法，推荐用Google Chrome下的chrome developer tools调试，可以看这个视频学习：<a href="http://happycasts.net/episodes/40" target="_blank" rel="noopener">http://happycasts.net/episodes/40</a></p><p>前端学习路线：<br><a href="http://www.cnblogs.com/w3cschool/p/6527337.html" target="_blank" rel="noopener">http://www.cnblogs.com/w3cschool/p/6527337.html</a><br>详细<br><a href="http://blog.csdn.net/u011047006/article/details/52597178" target="_blank" rel="noopener">http://blog.csdn.net/u011047006/article/details/52597178</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前端开发入门学习有：HTML、CSS、JavaScript（简称JS）这三个部分。所以在学习之前我们需要先明确三个概念：&lt;/p&gt;
&lt;p&gt;HTML——内容层，它的作用是表示一个HTML标签在页面里是个什么角色。&lt;br&gt;CSS——样式层，它的作用是表示一块内容以什么样的样式（字
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>菜鸟JQ教程</title>
    <link href="http://heartsay2018.github.io/2018/01/22/%E8%8F%9C%E9%B8%9FJQ%E6%95%99%E7%A8%8B/"/>
    <id>http://heartsay2018.github.io/2018/01/22/菜鸟JQ教程/</id>
    <published>2018-01-22T06:46:37.000Z</published>
    <updated>2018-01-22T06:46:50.730Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.runoob.com/jquery/jquery-tutorial.html" target="_blank" rel="noopener">http://www.runoob.com/jquery/jquery-tutorial.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://www.runoob.com/jquery/jquery-tutorial.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.runoob.com/jquery/jquery-tutorial.h
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>菜鸟JavaScript教程</title>
    <link href="http://heartsay2018.github.io/2018/01/22/%E8%8F%9C%E9%B8%9FJavaScript%E6%95%99%E7%A8%8B/"/>
    <id>http://heartsay2018.github.io/2018/01/22/菜鸟JavaScript教程/</id>
    <published>2018-01-22T06:45:50.000Z</published>
    <updated>2018-01-22T06:46:05.883Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.runoob.com/js/js-tutorial.html" target="_blank" rel="noopener">http://www.runoob.com/js/js-tutorial.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://www.runoob.com/js/js-tutorial.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.runoob.com/js/js-tutorial.html&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Css3菜鸟教程</title>
    <link href="http://heartsay2018.github.io/2018/01/22/Css3%E8%8F%9C%E9%B8%9F%E6%95%99%E7%A8%8B/"/>
    <id>http://heartsay2018.github.io/2018/01/22/Css3菜鸟教程/</id>
    <published>2018-01-22T06:41:14.000Z</published>
    <updated>2018-01-22T06:41:33.438Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.runoob.com/css3/css3-tutorial.html" target="_blank" rel="noopener">http://www.runoob.com/css3/css3-tutorial.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://www.runoob.com/css3/css3-tutorial.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.runoob.com/css3/css3-tutorial.html&lt;/a&gt;&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>html5菜鸟教程</title>
    <link href="http://heartsay2018.github.io/2018/01/22/html5/"/>
    <id>http://heartsay2018.github.io/2018/01/22/html5/</id>
    <published>2018-01-22T06:39:26.000Z</published>
    <updated>2018-01-22T06:40:03.681Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.runoob.com/html/html5-intro.html" target="_blank" rel="noopener">http://www.runoob.com/html/html5-intro.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://www.runoob.com/html/html5-intro.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.runoob.com/html/html5-intro.html&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hexo 入门指南 - 文章 &amp; 草稿</title>
    <link href="http://heartsay2018.github.io/2018/01/22/new-article/"/>
    <id>http://heartsay2018.github.io/2018/01/22/new-article/</id>
    <published>2018-01-22T06:35:02.000Z</published>
    <updated>2018-01-22T06:37:41.850Z</updated>
    
    <content type="html"><![CDATA[<p>文章<br>命令行中输入：</p><p>========================</p><p>$ hexo new “new article”</p><p>========================</p><p>之后在source/_posts目录下面，多了一个new-article.md的文件。</p><p>打开之后我们会看到：</p><p>=========================</p><p>title: new article </p><p>date: 2014-11-01 20:10:33 </p><p>tags: </p><hr><p>=========================</p><p>文件的开头是属性，采用统一的yaml格式，用三条短横线分隔。下面是文章正文。</p><p>文章的正文支持markdown格式，建议你先学习一下它的语法。markdown不像html似的一大堆标签，很简单，只有几个符号。</p><p>新建、删除或修改文章后，不需要重启hexo server，刷新一下即可预览。</p><p>属性<br>文章可以拥有如下属性：</p><p>Setting Description Default</p><p>layout    Layout    post或page    </p><p>title    文章的标题    </p><p>date    创建日期    文件的创建日期    </p><p>updated    修改日期    文件的修改日期    </p><p>comments    是否开启评论    true    </p><p>tags    标签    </p><p>categories    分类    </p><p>permalink    url中的名字    文件名    </p><p>动态博客中通过发布文章页面设置的各种属性，在hexo里要这样设置。</p><p>分类和标签<br>例如：</p><p>===========</p><p>categories: </p><ul><li>日记 </li></ul><p>tags: </p><ul><li><p>Hexo </p></li><li><p>node.js</p></li></ul><p>===========</p><p>摘要<br>同wordpress一样，<a id="more"></a>之上的内容为摘要。</p><p>layout<br>如果你修改了layout，在scaffolds文件夹里一定要有名字对应的模版文件，否则会采用默认模版。</p><p>文件名<br>在配置文件中的new_post_name项可以设置文件名，默认为:title，也就是你在命令行输入的名字。</p><p>文件名可以为下面几个变量和字符串常量的任意组合：</p><p>Variable Description</p><p>:title    Escaped title (lower case and replace spaces with dash)    </p><p>:year    Created year (4-digit)    </p><p>:month    Created month (2-digit)    </p><p>:i_month    Created month (Without leading zeros)    </p><p>:day    Created day (2-digit)    </p><p>:i_day    Created day (Without leading zeros)    </p><p>草稿<br>草稿相当于很多博客都有的“私密文章”功能。</p><p>============================</p><p>$ hexo new draft “new draft”</p><p>============================</p><p>会在source/_drafts目录下生成一个new-draft.md文件。但是这个文件不被显示在页面上，链接也访问不到。也就是说如果你想把某一篇文章移除显示，又不舍得删除，可以把它移动到_drafts目录之中。</p><p>如果你希望强行预览草稿，更改配置文件：</p><p>===================</p><p>render_drafts: true</p><p>===================</p><p>或者，如下方式启动server：</p><p>======================</p><p>$ hexo server –drafts</p><p>======================</p><p>下面这条命令可以把草稿变成文章，或者页面：</p><p>==================================</p><p>$ hexo publish [layout] <filename></filename></p><p>==================================</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章&lt;br&gt;命令行中输入：&lt;/p&gt;
&lt;p&gt;========================&lt;/p&gt;
&lt;p&gt;$ hexo new “new article”&lt;/p&gt;
&lt;p&gt;========================&lt;/p&gt;
&lt;p&gt;之后在source/_posts目录下面，多了一个new-article.md的文件。&lt;/p&gt;
&lt;p&gt;打开之后我们会看到：&lt;/p&gt;
&lt;p&gt;=========================&lt;/p&gt;
&lt;p&gt;title: new article &lt;/p&gt;
&lt;p&gt;date: 2014-11-01 20:10:33 &lt;/p&gt;
&lt;p&gt;tags: &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;=========================&lt;/p&gt;
&lt;p&gt;文件的开头是属性，采用统一的yaml格式，用三条短横线分隔。下面是文章正文。&lt;/p&gt;
&lt;p&gt;文章的正文支持markdown格式，建议你先学习一下它的语法。markdown不像html似的一大堆标签，很简单，只有几个符号。&lt;/p&gt;
&lt;p&gt;新建、删除或修改文章后，不需要重启hexo server，刷新一下即可预览。&lt;/p&gt;
&lt;p&gt;属性&lt;br&gt;文章可以拥有如下属性：&lt;/p&gt;
&lt;p&gt;Setting Description Default&lt;/p&gt;
&lt;p&gt;layout    Layout    post或page    &lt;/p&gt;
&lt;p&gt;title    文章的标题    &lt;/p&gt;
&lt;p&gt;date    创建日期    文件的创建日期    &lt;/p&gt;
&lt;p&gt;updated    修改日期    文件的修改日期    &lt;/p&gt;
&lt;p&gt;comments    是否开启评论    true    &lt;/p&gt;
&lt;p&gt;tags    标签    &lt;/p&gt;
&lt;p&gt;categories    分类    &lt;/p&gt;
&lt;p&gt;permalink    url中的名字    文件名    &lt;/p&gt;
&lt;p&gt;动态博客中通过发布文章页面设置的各种属性，在hexo里要这样设置。&lt;/p&gt;
&lt;p&gt;分类和标签&lt;br&gt;例如：&lt;/p&gt;
&lt;p&gt;===========&lt;/p&gt;
&lt;p&gt;categories: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;日记 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;tags: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Hexo &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;node.js&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;===========&lt;/p&gt;
&lt;p&gt;摘要&lt;br&gt;同wordpress一样，
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>first page</title>
    <link href="http://heartsay2018.github.io/2018/01/22/first-page/"/>
    <id>http://heartsay2018.github.io/2018/01/22/first-page/</id>
    <published>2018-01-22T06:16:36.000Z</published>
    <updated>2018-01-22T06:18:57.174Z</updated>
    
    <content type="html"><![CDATA[<p>内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://heartsay2018.github.io/2018/01/22/hello-world/"/>
    <id>http://heartsay2018.github.io/2018/01/22/hello-world/</id>
    <published>2018-01-22T01:44:07.890Z</published>
    <updated>2018-01-22T01:44:07.890Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
